scalar DateTime

type Listing {
  id: Int!
  signer: String!
  collection: String!
  tokenId: Int!
  price: Int!
  nonce: Int!
  startTime: Int!
  endTime: Int!
  createdAt: DateTime
}

input CreateListingInput {
  signer: String!
  collection: String!
  tokenId: Int!
  price: Int!
  startTime: Int!
  endTime: Int!
}

input UpdateListingInput {
  id: Int!
}

type Query {
  listings: [Listing]!
  listing(id: Int!): Listing
}

type Mutation {
  createListing(createListingInput: CreateListingInput!): Listing!
  updateListing(updateListingInput: UpdateListingInput!): Listing!
  removeListing(id: Int!): Listing
}
